// TODO: Update this comment if you add additional commands to this file
//
// available commands:
// "gradle check": run checkstyle to assess code quality
// "gradle clean": clean the project of all derived files
// "gradle build": create the bytecode from the source code
// "gradle run": run the program and produce output

apply plugin: 'java'

// declare the repositories that are used to meet dependencies
repositories {
  mavenLocal()
    mavenCentral()
}

// specify the use of gradle version 4.1
task wrapper(type: Wrapper) {
  gradleVersion = '4.1'
}

// specify the use of JUnit for testing
dependencies {
  testCompile 'junit:junit:4.9'
}

// configure the tests to produce logging output
test {
    testLogging {
        events "passed", "skipped", "failed", "standardOut", "standardError"
    }
}

// TODO: Using previous examples, fully update and add to these configurations

// declare values to place in the manifest file in the JAR
jar {
  manifest {
    attributes(
        'Class-Path': configurations.compile.collect { it.getName() }.join(' '),
        'Main-Class': 'labten.experiment.Main'
        )
  }
}

// give the name of the application to run with "gradle run" command
apply plugin: 'application'
mainClassName = 'labten.experiment.Main'

// TODO: Using previous examples, add configurations for running JUnit

// specify that the application will accept input from System.in
run {
   standardInput = System.in
}
